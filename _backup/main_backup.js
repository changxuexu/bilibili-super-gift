/**
 * 
 * jQuery needed
 *
 **/

// 动画配置参数
var FPS = 60,
	SHAPE_X = 140,
	SHAPE_DURATION = 4,
	COMBLE_OUT_X = 60;

// Comble Class
// 连击效果类
this.comble = this.comble || {};

(function(){

	/**
	 * 根据指定参数创建一个连击对象
	 * @_default 默认参数
	 * @opt 传入参数
	 * @return shape对象
	 **/
	comble.draw = function(opt) {

		var _default = {
			strokeColor: '#fff',	// 描边颜色
			strokeSize: 6,		// 描边大小
			front: '#fff',			// 前景色
			back: '#fff',			// 背景色
			alpha: 1,				// 透明度
			scaleX: 1,			// X 缩放
			scaleY: 1,			// Y 缩放
			x: 0,					// X 轴位置
			y: 0,					// Y 轴位置
			regX: 120,
			regY: 30
		},

		opt = $.extend({}, _default, opt);

		g = new createjs.Graphics();

		g.setStrokeStyle(opt.strokeSize)
		 .beginStroke(opt.strokeColor)
		 .moveTo(249.751,27.749)
		 .bt(249.751,18.36,242.14,10.749,232.751,10.749)
		 .bt(232.629,10.749,232.51,10.759,232.389,10.762)
		 .bt(230.349,10.087,228.174,9.707,225.908,9.707)
		 .bt(221.18,9.707,216.839,11.312,213.366,13.990)
		 .bt(209.531,10.103,204.208,7.691,198.314,7.691)
		 .bt(193.306,7.691,188.71,9.433,185.085,12.34)
		 .bt(182.207,10.365,178.727,9.207,174.971,9.207)
		 .bt(174.968,9.207,174.966,9.207,174.963,9.207)
		 .bt(170.565,5.349,164.81,3,158.499,3)
		 .bt(150.729,3,143.8,6.555,139.216,12.116)
		 .bt(138.473,11.932,137.7,11.824,136.9,11.824)
		 .bt(134.53,11.824,132.37,12.688,130.695,14.107)
		 .bt(128.479,13.084,126.02,12.498,123.418,12.498)
		 .bt(121.261,12.498,119.206,12.911,117.301,13.629)
		 .bt(113.716,7.69,107.227,3.706,99.783,3.706)
		 .bt(94.915,3.706,90.448,5.409,86.932,8.245)
		 .bt(83.206,9.232,79.863,11.159,77.204,13.791)
		 .bt(73.391,9.793,68.025,7.29,62.064,7.29)
		 .bt(61.389,7.29,60.723,7.327,60.064,7.39)
		 .bt(56.134,5.061,51.558,3.707,46.658,3.707)
		 .bt(43.892,3.707,41.227,4.135,38.722,4.924)
		 .bt(35.641,3.685,32.278,3,28.754,3)
		 .bt(13.979,3,2.002,14.977,2.002,29.752)
		 .bt(2.002,44.527,13.979,56.504,28.753998,56.504)
		 .bt(31.929,56.504,34.971,55.942,37.796,54.925995)
		 .bt(40.566,55.914,43.549,56.456994,46.658,56.456994)
		 .bt(53.843,56.457,60.354,53.57999,65.11,48.919995)
		 .bt(66.081,48.776994,67.038,48.58899,67.961,48.31699)
		 .bt(71.146,52.21399,75.982,54.70799,81.408,54.70799)
		 .bt(85.458,54.70799,89.174,53.31399,92.124,50.98899)
		 .bt(92.25,50.99099,92.375,50.99899,92.502,50.99899)
		 .bt(99.818,50.99899,106.282,47.37999,110.22399,41.84099)
		 .bt(110.33898,41.77299,110.448,41.695984,110.56198,41.62598)
		 .bt(113.74699,45.12098,118.31698,47.33199,123.41798,47.33199)
		 .bt(128.921,47.33199,133.81996,44.77299,137.01197,40.786985)
		 .bt(141.37397,48.10299,149.36197,53.00498,158.49897,53.00498)
		 .bt(165.74997,53.00498,172.26898,49.90898,176.83498,44.97798)
		 .bt(178.95498,44.75798,180.96297,44.16798,182.79797,43.27398)
		 .bt(186.66298,47.44598,192.17696,50.06498,198.31396,50.06498)
		 .bt(203.40397,50.06498,208.06695,48.265984,211.71397,45.271984)
		 .bt(215.41198,48.78798,220.40196,50.957984,225.90796,50.957984)
		 .bt(233.48797,50.957984,240.09497,46.856985,243.67897,40.76398)
		 .bt(247.388,37.645,249.751,32.975,249.751,27.749);

		g.beginStroke(null)
		 .beginFill(opt.back)
		 .moveTo(50.325,45.567)
		 .bt(47.202,49.82,42.85,53.109,37.795,54.926)
		 .bt(40.566,55.914,43.548,56.457,46.658,56.457)
		 .bt(53.843,56.457,60.353,53.581,65.11,48.92)
		 .bt(64.113,49.067,63.101,49.166,62.062,49.166)
		 .bt(57.712,49.166,53.673,47.838,50.325,45.567)
		 .moveTo(76.198,43.641)
		 .bt(73.872,45.776,71.067,47.398,67.961,48.316)
		 .bt(71.146,52.213,75.983,54.707,81.408,54.707)
		 .bt(85.457,54.707,89.174,53.314,92.124,50.989)
		 .bt(85.783,50.881,80.106,48.063,76.198,43.641)
		 .moveTo(48.79,12.037)
		 .bt(51.919,9.469,55.806,7.794,60.063,7.39)
		 .bt(56.133,5.061,51.558,3.707,46.658,3.707)
		 .bt(43.892,3.707,41.226,4.135,38.721,4.924)
		 .bt(42.614,6.491,46.054,8.945,48.79,12.037)
		 .moveTo(232.389,10.762)
		 .bt(230.349,10.086,228.174,9.707,225.907,9.707)
		 .bt(221.179,9.707,216.838,11.312,213.365,13.99)
		 .bt(215.105,15.754,216.539,17.821,217.581,20.106)
		 .bt(220.33,14.662,225.907,10.898,232.389,10.762)
		 .moveTo(218.113,36.362)
		 .bt(216.786,39.87,214.558,42.934,211.712,45.271)
		 .bt(215.41,48.788,220.401,50.958,225.908,50.958)
		 .bt(233.49,50.958,240.098,46.855,243.682,40.759)
		 .bt(240.726,43.245,236.916,44.748,232.751,44.748)
		 .bt(226.51,44.748,221.07,41.375,218.113,36.362)
		 .moveTo(110.963,17.754)
		 .bt(112.729,15.946,114.893,14.538,117.301,13.63)
		 .bt(113.716,7.691,107.227,3.707,99.783,3.707)
		 .bt(94.914,3.707,90.447,5.411,86.931,8.246)
		 .bt(88.711,7.775,90.572,7.499,92.501,7.499)
		 .bt(100.292,7.499,107.122,11.598,110.963,17.754)
		 .moveTo(176.831,44.98)
		 .bt(178.953,44.76,180.962,44.171,182.798,43.276)
		 .bt(181.895,42.302,181.082,41.243,180.372,40.113)
		 .bt(179.391,41.879,178.195,43.508,176.831,44.98)
		 .moveTo(110.22,41.844)
		 .bt(110.336,41.775,110.446,41.698,110.561,41.627)
		 .bt(110.527,41.59,110.489,41.558,110.456,41.521)
		 .bt(110.38,41.631,110.297,41.735,110.22,41.844)
		 .moveTo(180.878,16.855)
		 .bt(182.054,15.153,183.474,13.632,185.085,12.341)
		 .bt(182.207,10.366,178.726,9.207,174.97,9.207)
		 .bt(174.967,9.207,174.965,9.207,174.962,9.207)
		 .bt(177.395,11.341,179.418,13.931,180.878,16.855)
		 .moveTo(139.217,12.116)
		 .bt(138.474,11.932,137.701,11.824,136.9,11.824)
		 .bt(134.53,11.824,132.369,12.688,130.694,14.108)
		 .bt(132.585,14.98,134.302,16.166,135.754,17.623)
		 .bt(136.665,15.63,137.839,13.787,139.217,12.116);

		g.beginFill(opt.front)
		 .moveTo(232.751, 10.749)
		 .bt(226.114,10.749,220.381,14.56,217.581,20.106)
		 .bt(214.243,12.788,206.881,7.692,198.313,7.692)
		 .bt(191.08,7.692,184.7,11.323,180.878,16.855)
		 .bt(176.779,8.644,168.3,3.001,158.499,3.001)
		 .bt(148.395,3.001,139.697,8.998,135.754,17.623)
		 .bt(132.601,14.459,128.238,12.499,123.418,12.499)
		 .bt(118.534,12.499,114.126,14.515,110.963,17.754)
		 .bt(107.122,11.598,100.292,7.499,92.501,7.499)
		 .bt(86.536,7.499,81.133,9.902,77.203,13.791)
		 .bt(73.39,9.793,68.024,7.29,62.063,7.29)
		 .bt(57.024,7.29,52.403,9.072,48.79,12.037)
		 .bt(43.889,6.497,36.73,3,28.752,3)
		 .bt(13.977,3,2,14.977,2,29.752)
		 .bt(2,44.527,13.977,56.504,28.752,56.504)
		 .bt(37.609,56.504,45.457,52.197,50.325,45.567)
		 .bt(53.673,47.838,57.712,49.166,62.062,49.166)
		 .bt(67.519,49.166,72.472,47.061,76.198,43.641)
		 .bt(80.183,48.151,86.007,50.999,92.499,50.999)
		 .bt(99.957,50.999,106.537,47.243,110.455,41.521)
		 .bt(113.644,45.08,118.261,47.332,123.416,47.332)
		 .bt(128.919,47.332,133.818,44.773,137.01,40.787)
		 .bt(141.372,48.103,149.36,53.005,158.497,53.005)
		 .bt(167.911,53.005,176.107,47.799,180.372,40.112)
		 .bt(184.119,46.082,190.743,50.064,198.312,50.064)
		 .bt(207.374,50.064,215.085,44.364,218.113,36.362)
		 .bt(221.07,41.375,226.51,44.748,232.751,44.748)
		 .bt(242.14,44.748,249.751,37.137,249.751,27.748)
		 .bt(249.751,18.359,242.139,10.749,232.751,10.749);

		g.setStrokeStyle(opt.strokeSize - 2)
		 .beginStroke(opt.strokeColor)
		 .beginFill(null)
		 .a(27,29.752,26.603,0,Math.PI*2);

		var shape = new createjs.Shape(g);

		shape.set({
			scaleX: opt.scaleX,
			scaleY: opt.scaleY,
			alpha: opt.alpha,
			x: opt.x,
			y: opt.y,
			regX: opt.regX,
			regY: opt.regY
		});

		shape.timer = 0;

		shape.$id = opt.$id;

		return shape;
	}

	/**
	 * 初始化道具配置参数
	 **/
	comble.pool = {		//  道具池
		in: {},			// （进入或正在动画的）
		out: {}			// （被移除的）
	};

	comble.cashe = {};	// 缓冲池

	comble.count = {	// 当前道具数量
		in: 0,			// （进入或正在动画的）
		out: 0			// （被移除的）
	};	

	comble.poolId = 1;	// 连击道具自增Id

	comble.max = 5;		// 最大显示道具数量

})();

$(function(){
	
	var stage = new createjs.Stage('giftArea');  // 舞台初始化

	createjs.Ticker.setFPS(FPS);

	createjs.Ticker.addEventListener('tick', handleTick);

	// 模拟广播触发道具事件
	$('.send').click(function(){

		if( comble.count.in === 0 ) createjs.Ticker.addEventListener('tick', handleTick);

		/**
		 *	判断道具是否在缓冲队列
		 **/


		/**
		 *	当连击道具未达到最大值时，加入动画队列
		 **/
		if( comble.count.in < comble.max ) {

			// Test
			// 随机选取一种样式
			var r = Math.round(Math.random()*10);
			if( r > 5 ) r -= 5;

			// Function

			comble.pool.in[comble.poolId] = comble.draw({
				$id: comble.poolId,
		    	front: comble.lib[r].front,
		    	back: comble.lib[r].back,
		    	scaleX: 0.8,
		    	scaleY: 0.8,
		    	alpha: 0,
		    	x: 140,
		    	y: 80 * (comble.count.in + 1),
		    	regX: 120,
		    	regY: 50
			});

			comble.count.in++;

			stage.addChild(comble.pool.in[comble.poolId++]);

			stage.update();

		}


		/**
		 *	当连击道具超过最大值时，加入缓冲队列
		 **/


	});

	/**
	 * 动画主线程
	 **/
	function handleTick() {

		// 如果无道具，移除监听事件
		if( !comble.count.in && !comble.count.out ) {
			return createjs.Ticker.removeEventListener('tick', handleTick);
		}

		// 可视动画刷新
		if( comble.count.in ) {
			for( var i in comble.pool.in ) {
				animateCombleIn(comble.pool.in[i]);
			}
		}

		// 移除动画刷新
		if( comble.count.out ) {
			for( var i in comble.pool.out ) {
				animateCombleOut(comble.pool.out[i]);
			}
		}

	}

	/**
	 * 显示道具动画
	 * @t shape.timer : 道具计时器
	 *  0 ~ 45 帧为显示道具
	 *  45 ~ 600 为道具停留时间（10秒）
	 *  超过600进入移除队列
	 **/
	function animateCombleIn(shape) {
		var t = shape.timer;
		if( t > 18 && t <= 27 ) {
			shape.scaleX = shape.scaleY = t/90 + 0.8;
			shape.alpha = t/27;
			stage.update();
		}
		else if( t > 27 && t <= 36 ) {
			shape.scaleX = shape.scaleY = -0.13/9*t + 1.49;
			stage.update();
		}
		else if( t > 36 && t <= 45 ) {
			shape.scaleX = shape.scaleY = 0.03/9*t + 0.85;
			stage.update();
		}
		else if( t > FPS*SHAPE_DURATION ) {
			shape.timer = 0;
			comble.pool.out[shape.$id] = shape;
			delete comble.pool.in[shape.$id];
			comble.count.out++;
			return;
		}
		shape.timer++;
	}

	/**
	 * 移除道具动画
	 **/
	function animateCombleOut(shape) {
		var t = shape.timer;
		if( t === 1 ) console.log(shape.$id);
		if( t <= 20 ) {
			shape.x = SHAPE_X - COMBLE_OUT_X*t/20;
			shape.alpha = (20 - t)/20;
			stage.update();
		}
		else if( t > 30 ){
			delete comble.pool.out[shape.$id];
			resetComblePosition();
			return;
		}
		shape.timer++;
	}

	/**
	 * 重置道具位置
	 **/	
	 function resetComblePosition() {
	 	var i = 0
	 	for( var obj in comble.pool.in ) {
	 		comble.pool.in[obj].y = 80*(1 + i++);
	 	}
	 	comble.count.out--;
		comble.count.in--;
	 }

	/**
	 * 缓存道具
	 **/
	function casheComble(shape) {

	}

	/**
	 * Time Trace Graph
	 * For animation
	 * default trace area size: 300 * 300
	 **/

	var traceStage = new createjs.Stage('timeTrace'),
 		traceAreaSize = 300;

	function timeTrace(x,y) {
		var g = new createjs.Graphics();
		g.beginFill('#000').drawCircle(0,0,1);
		var s = new createjs.Shape(g);
		s.x = x * traceAreaSize;
		s.y = (1-y) * traceAreaSize;
		traceStage.addChild(s);
		traceStage.update();
	}

});
